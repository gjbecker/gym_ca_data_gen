import numpy as np
import pickle as pkl
import matplotlib.pyplot as plt
import matplotlib.cm as cm
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('--plot', type=bool, default=False)
parser.add_argument('--res', type=int, default=512)
parser.add_argument('--side', type=int, default=18)
parser.add_argument('--agent_r', type=float, default=2)
parser.add_argument('--goal_r', type=float, default=0.2)
args = parser.parse_args()
var = vars(args)

RES = var['res']
side = var['side']
agent_r = var['agent_r']
goal_r = var['goal_r']
scale = {
    'empty': 0,
    'ego agent': 1,
    'other agents': 2,
    'ego goal': 3
}

empty_grid = np.zeros((RES,RES))

def draw(grid, x_coord, y_coord, rad, value, print_grid=False):
    # Coordinate transformation
    cx = (side+x_coord) * ((RES-1))/(side*2)
    cy = (side-y_coord) * ((RES-1))/(side*2)
    r = rad*((RES-1))/(side*2)

    if cx > RES-1 or cy > RES-1:
        print(f'{x_coord,y_coord} outside coordinate range!')
        return grid

    for angle in np.arange(0, 2*np.pi, np.pi/100):
        x = int(round(cx + r*np.cos(angle)))
        y = int(round(cy + r*np.sin(angle)))
        # print(x,y, angle)
        x = max(min(RES-1, x), 0)
        y = max(min(RES-1, y), 0)

        # Fill circle
        if np.pi/2 >= angle >= 0:
            for i in range(int(cx), x+1):
                for j in range(int(cy), y+1):
                    grid[j,i] = value

        elif np.pi >= angle >= np.pi/2:
            for i in range(x, int(cx)+1):
                for j in range(int(cy), y+1):
                    grid[j,i] = value

        elif 3*np.pi/2 >= angle >= np.pi:
            for i in range(x, int(cx)+1):
                for j in range(y, int(cy)+1):
                    grid[j,i] = value

        elif 2*np.pi >= angle >= 3*np.pi/2:
            for i in range(int(cx), x+1):
                for j in range(y, int(cy)+1):
                    grid[j,i] = value        

    if print_grid:
        print(grid)
        print('='*50)
    return grid


episodes = [{'steps': 54, 'radii': [0.5616580256429864, 0.43006491129546665], 'states': [[[1.3405631255554322, -0.5734863551765752, 0.609982122287833], [1.3798903227437775, -0.5663995746307838, 0.17828713785179784], [1.3798903227437775, -0.5663995746307838, 0.70188592802056], [1.4248816966853437, -0.5579206952048964, 0.1862710012055271], [1.4248816966853437, -0.5579206952048964, 0.7098697913742893], [1.475940226352443, -0.5470946432728989, 0.2089377535439365], [1.475940226352443, -0.5470946432728989, 0.7325365437126987], [1.5333504665908944, -0.5327320702996392, 0.24514280687340428], [1.5333504665908944, -0.5327320702996392, 0.7687415970421665], [1.5971957468229474, -0.5133931633293997, 0.2941176785088413], [1.5971957468229474, -0.5133931633293997, 0.8177164686776035], [1.6672523039334346, -0.48739528661200066, 0.35534571538933446], [1.6672523039334346, -0.48739528661200066, 0.8789445055580967], [1.7428624651242757, -0.4528604446512279, 0.4284519446946018], [1.7428624651242757, -0.4528604446512279, 0.952050734863364], [1.8227996856597954, -0.40782156525505664, 0.5130942357636326], [1.8227996856597954, -0.40782156525505664, 1.0366930259323948], [1.8696652667251106, -0.2847075429804321, 1.2070656461573475], [1.9165308481134296, -0.16159349531788575, 1.2070657124296755], [1.9633964280901322, -0.03847945987342159, 1.2070656894476326], [2.010262012307863, 0.0846345867120581, 1.2070656894476361], [2.057127473676396, 0.20774861628505725, 1.2070665150567994], [2.103992939999381, 0.3308626439720593, 1.2070664748140072], [2.150858402081343, 0.45397666051804386, 1.2070664748140343], [2.197723864163305, 0.5770906770640285, 1.207066474814034], [2.244589329059434, 0.7002047308050586, 1.2070665552995048], [2.291454793955562, 0.823318784546089, 1.2070665552995112], [2.3383202546106716, 0.9464328271461002, 1.2070665552995086], [2.385185718119486, 1.0695468176380571, 1.2070663943285245], [2.432051181628301, 1.1926608081300138, 1.2070663943285225], [2.4789166451371156, 1.3157747986219708, 1.2070663943285236], [2.52578234657565, 1.4388887878297276, 1.2070647028675576], [2.572648048014194, 1.5620027770374807, 1.2070647028674768], [2.619513511523005, 1.685116767529439, 1.2070663943285564], [2.666378975031825, 1.8082307580213937, 1.2070663943284776], [2.7132446764703646, 1.9313447472291483, 1.2070647028675117], [2.7601101385127977, 2.0544588530782257, 1.2070667162702753], [2.806975842725988, 2.1775729687841916, 1.2070650248106736], [2.853841304768407, 2.300687074633274, 1.207066716270389], [2.9007070047405756, 2.423801179198222, 1.2070650248105599], [2.9475727089537713, 2.5469152949041862, 1.2070650248106332], [2.994438170996195, 2.670029400753267, 1.2070667162703486], [3.041303870968355, 2.7931435053182185, 1.2070650248106332], [3.0881695751815577, 2.91625762102418, 1.2070650248105734], [3.1350350372239753, 3.0393717268732634, 1.2070667162704025], [3.181900741437178, 3.162485842579225, 1.2070650248105734], [3.2287664414093444, 3.2855999471441737, 1.2070650248105772], [3.275631903451761, 3.408714052993257, 1.2070667162704063], [3.3224976076649635, 3.5318281686992186, 1.2070650248105772], [3.3693633076371308, 3.654942273264167, 1.2070650248105685], [3.416228769679549, 3.77805637911325, 1.2070667162703976], [3.4630944738927525, 3.901170494819211, 1.2070650248105685], [3.5099599346269215, 4.024284358813017, 1.2070660723862339], [3.556825638840125, 4.147398474518979, 1.2070650248105685]], [[1.6759121144789395, 1.7148150463820881, -2.7945104280473614], [1.5861386058950186, 1.715121149686029, 3.1381829381570356], [1.5861386058950186, 1.715121149686029, -2.6214035788537884], [1.4900832184585255, 1.71125841079221, -3.1014006474973583], [1.4900832184585255, 1.71125841079221, -2.577801857328596], [1.3874532014388121, 1.7019141925930499, -3.0507953802110577], [1.3874532014388121, 1.7019141925930499, -2.5271965900422955], [1.2781667650081365, 1.685510515778255, -2.992606852388563], [1.2781667650081365, 1.685510515778255, -2.469008062219801], [1.162463423522309, 1.6602059609780757, -2.9262807408334637], [1.162463423522309, 1.6602059609780757, -2.4026819506647015], [1.0410401846077573, 1.623934509660033, -2.8513113299371624], [1.0410401846077573, 1.623934509660033, -2.3277125397684], [0.9152056026689306, 1.5745033044537358, -2.767285261488142], [0.9152056026689306, 1.5745033044537358, -2.24368647131938], [0.7870298033879213, 1.5097713489624311, -2.673933301305952], [0.6897181278903324, 1.371894717254564, -2.1853963175775433], [0.5924064510647276, 1.2340180864839945, -2.185396327209458], [0.495094747881247, 1.0961414597254744, -2.185396468523391], [0.3977830441133413, 0.9582648917435486, -2.1853966721865254], [0.3004713334714437, 0.8203883140221782, -2.1853966721865414], [0.2031596297035368, 0.6825117460402532, -2.1853966721865343], [0.10584793090885859, 0.5446351745482805, -2.185396636116383], [0.008536232114180642, 0.4067586030563076, -2.1853966361163812], [-0.08877546668049756, 0.2688820315643349, -2.185396636116383], [-0.1860871584550795, 0.13100545511765924, -2.1853965852005817], [-0.28339886895086924, -0.006871137297861679, -2.1853966212707365], [-0.38071057257267027, -0.14474771997393568, -2.18539662127074], [-0.4780222761944711, -0.2826243026500098, -2.1853966212707383], [-0.5753339531954718, -0.4205008749326791, -2.185396527905913], [-0.6726456301964723, -0.5583774472153487, -2.1853965279059113], [-0.7699573071974728, -0.6962540194980181, -2.1853965279059113], [-0.867269037732286, -0.8341305831791943, -2.1853968164671502], [-0.9645807147332865, -0.9720071554618638, -2.1853965279059113], [-1.0618923911498555, -1.109883786521126, -2.185396324242777], [-1.159204122269087, -1.247760291425698, -2.1853970201304267], [-1.2565158590934626, -1.385636923622922, -2.185396612803959], [-1.3538275959178405, -1.5235135558201445, -2.185396612803975], [-1.4511393327422168, -1.6613901880173683, -2.1853966128039626], [-1.5484510626926038, -1.7992668104751455, -2.185396612803961], [-1.6457628006858247, -1.9371433251191639, -2.1853970201304], [-1.7430745386790476, -2.075019839763181, -2.1853970201304143], [-1.8403862697982774, -2.212896344667754, -2.1853970201304143], [-1.9376980077915003, -2.350772859311771, -2.1853970201304143], [-2.0350096249691227, -2.4886493716798865, -2.185396443007766], [-2.1323213560883527, -2.6265258765844597, -2.1853970201304143], [-2.229633094081578, -2.764402391228475, -2.185397020130432], [-2.326944825200808, -2.902278896133048, -2.1853970201304143], [-2.4242565631940307, -3.040155410777065, -2.1853970201304143], [-2.521568301187253, -3.1780319254210823, -2.1853970201304125], [-2.618879795211451, -3.3159086706195042, -2.1853950512328626], [-2.716191530866959, -3.4537854203699156, -2.185396205477932], [-2.8135030248911725, -3.5916621655683265, -2.1853950512329763], [-2.8135030248911725, -3.5916621655683265, -2.1853950512329763]]], 'actions': [[[0.0, -0.5235987901687622], [0.3996061682701111, -0.43169498443603516], [0.0, 0.5235987901687622], [0.45783349871635437, -0.515614926815033], [0.0, 0.5235987901687622], [0.5219364762306213, -0.5009320378303528], [0.0, 0.5235987901687622], [0.5917955040931702, -0.48739373683929443], [0.0, 0.5235987901687622], [0.6670991778373718, -0.4746239185333252], [0.0, 0.5235987901687622], [0.7472490072250366, -0.46237075328826904], [0.0, 0.5235987901687622], [0.8312371373176575, -0.4504925608634949], [0.0, 0.5235987901687622], [0.9175216555595398, -0.43895649909973145], [0.0, 0.5235987901687622], [1.3173247575759888, 0.1703726202249527], [1.3173249959945679, 6.62723280697719e-08], [1.3173248767852783, -2.2982042935382196e-08], [1.3173249959945679, 3.552713678800501e-15], [1.3173243999481201, 8.25609163257468e-07], [1.3173243999481201, -4.024279220971039e-08], [1.3173242807388306, 2.708944180085382e-14], [1.3173242807388306, -2.220446049250313e-16], [1.3173246383666992, 8.048547073258305e-08], [1.3173246383666992, 6.439293542825908e-15], [1.3173245191574097, -2.6645352591003757e-15], [1.3173240423202515, -1.6097098409773025e-07], [1.3173240423202515, -1.9984014443252818e-15], [1.3173240423202515, 1.1102230246251565e-15], [1.3173248767852783, -1.6914609659579583e-06], [1.3173248767852783, -8.08242361927114e-14], [1.3173240423202515, 1.691461079644796e-06], [1.3173240423202515, -7.882583474838611e-14], [1.3173248767852783, -1.6914609659579583e-06], [1.3173251152038574, 2.013402763623162e-06], [1.3173260688781738, -1.6914596017159056e-06], [1.3173251152038574, 1.6914597154027433e-06], [1.3173259496688843, -1.691459829089581e-06], [1.3173260688781738, 7.327471962526033e-14], [1.3173251152038574, 1.6914597154027433e-06], [1.3173259496688843, -1.6914597154027433e-06], [1.3173260688781738, -5.972999872483342e-14], [1.3173251152038574, 1.691459829089581e-06], [1.3173260688781738, -1.691459829089581e-06], [1.3173259496688843, 3.774758283725532e-15], [1.3173251152038574, 1.691459829089581e-06], [1.3173260688781738, -1.691459829089581e-06], [1.3173259496688843, -8.659739592076221e-15], [1.3173251152038574, 1.691459829089581e-06], [1.3173260688781738, -1.691459829089581e-06], [1.317322850227356, 1.0475756653249846e-06], [1.3173260688781738, -1.0475756653249846e-06]], [[0.0, -0.5235987901687622], [0.8977403044700623, -0.3504919409751892], [0.0, 0.5235987901687622], [0.961330235004425, -0.47999706864356995], [0.0, 0.5235987901687622], [1.0305452346801758, -0.47299352288246155], [0.0, 0.5235987901687622], [1.1051065921783447, -0.4654102623462677], [0.0, 0.5235987901687622], [1.1843810081481934, -0.4572726786136627], [0.0, 0.5235987901687622], [1.2672498226165771, -0.44862937927246094], [0.0, 0.5235987901687622], [1.3519536256790161, -0.4395727217197418], [0.0, 0.5235987901687622], [1.4359408617019653, -0.43024682998657227], [1.687587857246399, 0.4885369837284088], [1.687587857246399, -9.631914821284226e-09], [1.6875879764556885, -1.413139329997648e-07], [1.6875874996185303, -2.036631343571571e-07], [1.6875876188278198, -1.5987211554602254e-14], [1.6875874996185303, 7.105427357601002e-15], [1.6875874996185303, 3.607015131024127e-08], [1.6875874996185303, 1.7763568394002505e-15], [1.6875874996185303, -1.7763568394002505e-15], [1.6875874996185303, 5.091580135285767e-08], [1.6875877380371094, -3.607015486295495e-08], [1.6875876188278198, -3.552713678800501e-15], [1.6875876188278198, 1.7763568394002505e-15], [1.6875873804092407, 9.336482520438949e-08], [1.6875873804092407, 1.7763568394002505e-15], [1.6875873804092407, 0.0], [1.6875876188278198, -2.885612389036396e-07], [1.6875873804092407, 2.885612389036396e-07], [1.687587857246399, 2.036631343571571e-07], [1.6875871419906616, -6.95887649726501e-07], [1.6875882148742676, 4.073264676662802e-07], [1.6875882148742676, -1.5987211554602254e-14], [1.6875882148742676, 1.2434497875801753e-14], [1.687588095664978, 1.7763568394002505e-15], [1.6875872611999512, -4.073264392445708e-07], [1.6875872611999512, -1.4210854715202004e-14], [1.6875871419906616, 0.0], [1.6875872611999512, 0.0], [1.6875865459442139, 5.771226483375358e-07], [1.6875871419906616, -5.771226483375358e-07], [1.6875872611999512, -1.7763568394002505e-14], [1.6875871419906616, 1.7763568394002505e-14], [1.6875872611999512, 0.0], [1.6875872611999512, 1.7763568394002505e-15], [1.6875877380371094, 1.9688975498866057e-06], [1.687589168548584, -1.1542450693013961e-06], [1.6875877380371094, 1.1542449556145584e-06], [1.6875877380371094, 1.1542449556145584e-06]]], 'rewards': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]], 'goals': [[3.599846679191942, 4.260413160995312], [-2.9104930990791638, -3.7290829375805092]], 'policies': ['RVO', 'RVO']}]


# Read data
# path = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'datasets')
#                     # '{policy}_{num_agents}_agent_{num_episodes}.pkl'.format(policy='mixed', num_agents='2', num_episodes='10000'))
# # file = open(path, 'rb')
# # episodes = pkl.load(file)
# files = os.listdir(path)
# for file in files:
#     if file.endswith('.pkl'):
#         pass
#     else:
#         files.remove(file)

# # Main loop
# for file in files:
#     print(file)
#     data = open(os.path.join(path, file), 'rb')
#     episodes = pkl.load(data)
for episode in episodes:
    agents = np.arange(len(episode['radii']))
    radii = episode['radii']
    goals = episode['goals']
    end = len(episode['states'][0])
    print(f'Episode Length: {end}')

    # Cycle through each agent as ego for all episodes
    for ego in range(len(agents)):      
        # Draw goal for ego agent
        grid_goal = draw(np.copy(empty_grid), goals[ego][0], goals[ego][1], goal_r, scale['ego goal'])
        print(f'Ego:{ego}, Goal: {goals[ego]}')
        
        for step in range(episode['steps']):
            grid = np.copy(grid_goal)
            states = episode['states']
            # Draw positions for agents
            for agent in agents:
                # print(f'Agent {agent}; State: {states[agent][step]}')
                if agent == ego:
                    grid = draw(grid, states[agent][step][0], states[agent][step][1], radii[agent], scale['ego agent'])
                else:
                    grid = draw(grid, states[agent][step][0], states[agent][step][1], radii[agent], scale['other agents'])
                grid = draw(grid, goals[agent][0], goals[agent][1], goal_r, scale['ego goal'])
            step += 1
            if var['plot'] and (step % 10 == 0 or step == 1 or step == end):
                plt.imshow(grid, cmap=cm.gray)
                plt.title('Step: ' + str(step))
                plt.show()
    
    print('Episode Ended')